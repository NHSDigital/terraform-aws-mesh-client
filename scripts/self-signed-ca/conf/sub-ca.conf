[ ca ]
# `openssl ca` settings
default_ca = CA_default

[ CA_default ]
# Directory and file locations.
dir               = $ENV::CONF_CA_DIR # export CONF_CA_DIR from scripts
copy_extensions   = copy # to make -addext "subjectAltName=x" work (be aware of warnings if you ever use this setting in prod)
unique_subject    = no
certs             = $dir/certs
new_certs_dir     = $dir/newcerts
crl_dir           = $dir/crl
database          = $dir/index.txt
serial            = $dir/serial
# RANDFILE          = $dir/private/.rand

# The root key and root certificate.
private_key       = $dir/key.pem
certificate       = $dir/crt.pem

# For certificate revocation lists.
crlnumber         = $dir/crl/crlnumber
crl               = $dir/crl/crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30

# other options
default_md        = sha256
name_opt          = ca_default
cert_opt          = ca_default
default_days      = 3650
default_crl_days  = 3650
preserve          = no
policy            = policy_loose

# The crl_ext extension is automatically applied when creating certificate revocation lists.
[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier=keyid:always


[ policy_loose ]
# Allow the intermediate CA to sign a diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = supplied


# Options from the [req] section are applied for `openssl req`
# when creating certificates or certificate signing requests.
# i.e. we use `openssl req -config int-ca.conf` to use these [req] settings
[req]
default_bits        = 4096
default_md          = sha256
#req_extensions     = currently req_extensions has issues playing nice with -addext (https://security.stackexchange.com/a/183973)
prompt = no
distinguished_name  = req_distinguished_name # repoint

# The [ req_distinguished_name ] section declares the information normally required
# in a certificate signing request. You can optionally specify some defaults.
[req_distinguished_name]
C = GB
ST = West Yorkshire
L = Leeds
O = $ENV::CONF_SUB_CA_ORG_NAME # export CONF_SUB_CA_ORG_NAME from scripts
OU = MESH
CN = $ENV::CONF_CA_NAME - intermediate CA # CN should never be a DNS name for a CA cert

# We apply (`-extension v3_ca_intermediate`)
# when we create the intermediate certificate.
[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
basicConstraints = critical, CA:TRUE, pathlen:0
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

# We apply (`-extension usr_cert`)
# when signing server certificates, such as those used for web servers
[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

# We apply (`-extension usr_cert`)
# when signing client certificates, such as those used for remote user authentication.
[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth #, emailProtection




