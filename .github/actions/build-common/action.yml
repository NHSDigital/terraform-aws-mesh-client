name: "common-build-steps"
description: "regular build steps"
inputs:
   setup-aws-credentials:
     required: false
     default: "false"
     description: "whether to configure aws credentials"
   force-python-version:
     required: false
     default: ""
     description: "provide a specific python version (see setup-python action docs) or empty string to use the version specified in pyproject.toml"


runs:
  using: "composite"
  steps:
      - name: print branch info
        shell: bash
        run: |
          git branch
          echo "GITHUB_HEAD_REF=${GITHUB_HEAD_REF}"
          echo "GITHUB_BASE_REF=${GITHUB_BASE_REF}"
          git log --oneline -n 10

      - name: clean
        shell: bash
        run: |
          git clean -fdx
          find . -type f | xargs chmod g+w

      - name: secrets-check
        shell: bash
        run: make check-secrets

      - name: merge into base_branch
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          echo base branch "${{ github.base_ref }}"
          echo pr branch "${{ github.head_ref }}"
          git checkout "${{ github.base_ref }}"
          git checkout -b "merging-${{ github.event.number }}"
          git merge --ff-only "${{ github.event.pull_request.head.sha }}"

      - name: setup python using pyproject.toml
        if: ${{ inputs.force-python-version == '' }}
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'

      - name: setup specific python version
        if: ${{ inputs.force-python-version != '' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.force-python-version }}

      - name: install terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.5

      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: add poetry plugins
        shell: bash
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]"

      - name: git reset
        shell: bash
        run: git reset --hard

