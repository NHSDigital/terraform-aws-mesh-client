[tool.poetry]
name = "mesh-client-aws-serverless"
version = "0.1.0"
description = "NHS MESH Client built using AWS serverless technologies only"
authors = ["spine core"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/NHSDigital/terraform-aws-mesh-client"
packages = [
    { include = "shared", from = "./src" },
]

[tool.poetry.dependencies]
python = "^3.9"
importlib-metadata = "6.8.0"
urllib3 = "^1.26.0"
spine-aws-common = "^0.2.14"
nhs-aws-helpers = "^0.5.5"
aws-lambda-powertools = "^2.25.1"
mesh-client = "^3.2.1"

[tool.poetry.group.dev.dependencies]
# ci / testing dependencies
boto3 = "^1.33.1"
mypy = "^1.4.0"
coverage = "^7.2.7"
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
requests-mock = "^1.11.0"
moto = {extras = ["s3", "ssm", "stepfunctions", "secretsmanager"], version = "^4.1.0"}
boto3-stubs = {extras = ["s3", "ssm", "secretsmanager", "dynamodb", "stepfunctions", "sqs", "lambda", "logs",], version = "^1.34.32"}
ruff = "^0.1.0"
petname = "^2.6"
black = "^23.9.1"

[tool.poetry.group.local.dependencies]
ipython = "^8.12.2"

[tool.ruff]
select = [
    # See https://beta.ruff.rs/docs/rules/ for a full list
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "Q", # flake8-quotes
    "YTT", # flake8-2020
    "RSE", # flake8-raise
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "EXE", # flake8-executable
    "A", # flake8-builtins
    "UP",  # pyupgrade
    "PT", # flake8-pytest-style
    "PERF", # Perflint #
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
]
src = ["."]
ignore = [
    "SIM112"  # casing on environment variables
]
exclude = [
    ".git",
    ".venv",
]
unfixable = ["SIM112"]
line-length = 120
target-version = "py311"

[tool.ruff.per-file-ignores]


[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
show_error_codes = true
check_untyped_defs = true
exclude = [
    "build",
    "dist",
    "scripts",
    "terraform",
    "module"
]

[[tool.mypy.overrides]]
module = "spine_aws_common.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "moto.*"
ignore_missing_imports = true


[[tool.mypy.overrides]]
module = "requests.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
python_classes = "NoTestClasses"
python_files = "*_test.py test_*.py _tests.py"
norecursedirs = ".git .venv .eggs build dist .tox"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
omit = [
    ".venv/*",
    ".tox/*",
    "tests/*",
    "terraform/dist/*",
    "terraform/mesh_aws_client/*",
    "terraform/mesh_aws_client_dependencies/*"
]
source = [
    "."
]


[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    "pragma: no cover",
    "from .*",
    "import .*"
]
omit = [
    "tests/*",
]
sort = "-cover"
ignore_errors = true
precision = 2
fail_under = 65
show_missing = true

[tool.coverage.xml]
output = "reports/coverage.xml"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
